#include "ip.h"
#define CHECK(HDR...)                                                         \
  {                                                                           \
    const u_char hdr[] = HDR;                                                 \
    auto res = Ip::getChecksum(hdr, (hdr[0] & 0xf) * 4);                      \
    if (res == 0)                                                             \
      LOG_INFO("case %d: Checksum correct.", caseNum++)                       \
    else                                                                      \
      LOG_ERR("case %d: Checksum validation failed. res: %d", caseNum++, res) \
  }

int caseNum = 1;

int main() {
  CHECK({
      0x45, 0x20, 0x00, 0x28, 0x56, 0x78, 0x40, 0x00, 0x33, 0x06, 0xda, 0x24,
      0x3c, 0xd5, 0x16, 0x43, 0xc0, 0xa8, 0x03, 0x53, 0x01, 0xbb, 0xc8, 0x1b,
      0x30, 0x59, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00,
      0x8e, 0xa5, 0x00, 0x00, 0x00, 0x00, 0xee, 0x9e, 0x2d, 0xb7,
  });
  CHECK({
      0x45, 0x00, 0x00, 0x28, 0x00, 0x00, 0x40, 0x00, 0x40, 0x06,
      0x24, 0x34, 0xc0, 0xa8, 0x03, 0x53, 0x2a, 0x9f, 0x28, 0x02,
      0xc7, 0x0f, 0x01, 0xbb, 0x7a, 0xc2, 0x19, 0x3d, 0x4f, 0x2d,
      0x00, 0xd0, 0x50, 0x10, 0x0f, 0xff, 0xdc, 0x71, 0x00, 0x00,
  })
  return 0;
}