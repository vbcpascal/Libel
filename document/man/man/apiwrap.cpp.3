.TH "/Users/guanzhichao/course/计算机网络/protocol/src/apiwrap.cpp" 3 "Fri Nov 22 2019" "TCP/IP Ptotocol" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/guanzhichao/course/计算机网络/protocol/src/apiwrap.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'apiwrap\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fB__wrap_socket\fP (int domain, int type, int protocol)"
.br
.ti -1c
.RI "int \fB__wrap_bind\fP (int socket, const struct sockaddr *address, socklen_t address_len)"
.br
.ti -1c
.RI "int \fB__wrap_listen\fP (int socket, int backlog)"
.br
.ti -1c
.RI "int \fB__wrap_connect\fP (int socket, const struct sockaddr *address, socklen_t address_len)"
.br
.ti -1c
.RI "int \fB__wrap_accept\fP (int socket, struct sockaddr *address, socklen_t *address_len)"
.br
.ti -1c
.RI "ssize_t \fB__wrap_read\fP (int fildes, void *buf, size_t nbyte)"
.br
.ti -1c
.RI "ssize_t \fB__wrap_write\fP (int fildes, const void *buf, size_t nbyte)"
.br
.ti -1c
.RI "ssize_t \fB__wrap_close\fP (int fildes)"
.br
.ti -1c
.RI "int \fB__wrap_getaddrinfo\fP (const char *node, const char *service, const struct addrinfo *hints, struct addrinfo **res)"
.br
.ti -1c
.RI "void \fB__wrap_freeaddrinfo\fP (struct addrinfo *res)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int __wrap_accept (int socket, struct sockaddr * address, socklen_t * address_len)"

.SS "int __wrap_bind (int socket, const struct sockaddr * address, socklen_t address_len)"

.SS "ssize_t __wrap_close (int fildes)"

.SS "int __wrap_connect (int socket, const struct sockaddr * address, socklen_t address_len)"

.SS "void __wrap_freeaddrinfo (struct addrinfo * res)"

.SS "int __wrap_getaddrinfo (const char * node, const char * service, const struct addrinfo * hints, struct addrinfo ** res)"

.SS "int __wrap_listen (int socket, int backlog)"

.SS "ssize_t __wrap_read (int fildes, void * buf, size_t nbyte)"

.SS "int __wrap_socket (int domain, int type, int protocol)"

.SS "ssize_t __wrap_write (int fildes, const void * buf, size_t nbyte)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TCP/IP Ptotocol from the source code\&.
